name: firstDevOps-experience

on:
  push:
  pull_request:
    branches:
      - main
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  APPLY_FIXES: all
  APPLY_FIXES_EVENT: pull_request
  APPLY_FIXES_MODE: commit

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: MegaLinter
        id: megalinter
        uses: oxsecurity/megalinter/flavors/python@v7
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }} # Используем PAT_TOKEN вместо GITHUB_TOKEN
          CPP_CPPLINT_ARGUMENTS: "--filter=-whitespace,-legal/copyright"
          C_CPPLINT_ARGUMENTS: "--filter=-whitespace,-legal/copyright"
          PYTHON_BLACK_ARGUMENTS: "--line-length=100"
          PYTHON_FLAKE8_ARGUMENTS: "--max-line-length=100"
          DISABLE_LINTERS: bandit, actionlint, jscpd, checkov, kics, cspell
          MARKDOWN_MARKDOWNLINT_DISABLE_ERRORS: true
          REPOSITORY_CHECKOV_DISABLE_ERRORS: true
          REPOSITORY_KICS_DISABLE_ERRORS: true
          SPELL_CSPELL_DISABLE: true
          SPELL_MISSPELL_DISABLE: true

      - name: Debug Output
        run: |
          echo "MegaLinter outcome: ${{ steps.megalinter.outcome }}"
          echo "MegaLinter result: ${{ steps.megalinter.result }}"

      - name: Get Changes
        id: get-changes
        if: always() && (steps.megalinter.outcome != 'skipped')
        run: |
          changes=$(git diff --no-color)
          echo "changes<<EOF" >> $GITHUB_ENV
          echo "$changes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Pull Request
        if: github.event_name == 'push' && always() && (steps.megalinter.outcome != 'skipped')
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT }}
          commit-message: "[MegaLinter] Apply linter fixes"
          title: "chore: MegaLinter fixes"
          branch: "fix/megalinter-updates"
          base: ${{ github.head_ref }}
          body: |
            ## Автоматические исправления от MegaLinter

            Этот PR содержит исправления, предложенные MegaLinter.

            ### Предлагаемые изменения:
            ```diff
            ${{ env.changes }}
            ```

      - name: Comment PR
        if: github.event_name == 'pull_request' && always() && (steps.megalinter.outcome != 'skipped')
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const output = `## MegaLinter Результаты

            ${process.env.MEGALINTER_RESULT || 'Нет результатов'}

            ### Найденные проблемы:
            \`\`\`
            ${process.env.changes || 'Нет изменений'}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })


  TestOnUbuntu:
    needs: [megalinter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install cpp + cmake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build g++

      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja ../backend
          ninja
      - name: Setup Python
        run: |
          sudo apt-get install -y python3 python3-pip
          mv backend ../tests
          cd ../tests

      - name: Start Tests
        run: |
          cd tests
          ls
          python3 tester.py
