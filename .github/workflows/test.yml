name: MegaLinter Workflow

on:
  push:
  pull_request:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  APPLY_FIXES: all
  APPLY_FIXES_EVENT: pull_request
  APPLY_FIXES_MODE: commit

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run MegaLinter
        id: megalinter
        uses: oxsecurity/megalinter@v7
        env:
          DISABLE_ERRORS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_LINTERS: bandit, actionlint, jscpd, checkov, kics, cspell

      - name: Format MegaLinter Results
        id: format-results
        run: |
          table="| Descriptor | Linter | Found | Fixed | Errors | Elapsed time |\n| --- | --- | --- | --- | --- | --- |"
          while read -r line; do
            if [[ "$line" =~ \| ]]; then
              table+="\n$line"
            fi
          done < /github/workspace/.mega-linter-reports/summary.md

          echo "results_table<<EOF" >> $GITHUB_ENV
          echo "$table" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment PR with MegaLinter Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `### MegaLinter Results\n\n${process.env.results_table}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Create Pull Request for Fixes
        if: github.event_name == 'push'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Apply linter fixes"
          title: "MegaLinter Fixes"
          branch: "fix/megalinter"
          body: |
            ## MegaLinter Automatic Fixes
            This PR contains linter fixes applied by MegaLinter. Please review and merge.

  TestOnUbuntu:
    needs: [megalinter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install cpp + cmake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build g++

      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja ../backend
          ninja

      - name: Setup Python
        run: |
          sudo apt-get install -y python3 python3-pip
          mv backend ../tests
          cd ../tests

      - name: Start Tests
        run: |
          cd tests
          ls
          python3 tester.py
