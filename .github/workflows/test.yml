name: runTests

on:

  pull_request:

    branches:
      - master
      - main
  push:


jobs:
  FormatCode:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run clang-format
        run: |
          clang-format -i -style=file backend/**/*.cpp backend/**/*.h

      - name: Commit changes if any
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Format code with clang-format"
          else
            echo "No formatting changes detected."
          fi

      - name: Push changes
        if: steps.Commit_changes_if_any.outputs.commit != ''
        run: |
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cpp-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: üìÇ Load .env file
        if: hashFiles('.github/workflows/.env') != ''
        uses: xom9ikk/dotenv@v2
        with:
          path: .github/workflows

      - name: ‚¨áÔ∏è Setup CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ^3
          ninjaVersion: ^1.11.1

      - name: üîß Configure
        run: cmake -S ${{ env.CMAKE_SOURCE_PREFIX }} -B ${{ env.CMAKE_BINARY_PREFIX }} -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DCMAKE_PREFIX_PATH="~/micromamba" -DCMAKE_INSTALL_PREFIX=${{ env.CMAKE_INSTALL_PREFIX }}  -D CPPTERMINAL_ENABLE_DOCS=OFF

      - name: ‚òëÔ∏è cpp-linter
        uses: cpp-linter/cpp-linter-action@v3
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: 'file'
          database: ${{ env.CMAKE_BINARY_PREFIX }}
          step-summary: true
          thread-comments: true
          files-changed-only: true
          lines-changed-only: false
          version: '17'
          tidy-checks: ''
          ignore: '.github|${{ env.CMAKE_BINARY_PREFIX }}/_deps'

  TestOnUbuntu:
    needs: [FormatCode, cpp-linter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install cpp + cmake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build g++

      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja ../backend
          ninja
      - name: Setup Python
        run: | 
          sudo apt-get install -y python3 python3-pip
          mv backend ../tests
          cd ../tests

      - name: Start Tests
        run: |
          cd tests
          ls
          python3 tester.py